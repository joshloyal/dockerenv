#!/bin/bash


function cddockerenv() {
    dockerenv_verify_workon_home || return 1
    cd $WORKON_HOME
}

# Set up tab completion (Adapted from virtualenvwrapper)
# Currently only supports the bash shell
function dockerenv_setup_tab_completion() {
    if [ -n "$BASH" ]; then
        function _cddockerenv_complete() {
            local cur="$2"
            COMPREPLY=( $(cddockerenv && compgen -d -- "${cur}" ) )
        }
        complete -o nospace -F _cddockerenv_complete workon
        complete -o nospace -F _cddockerenv_complete rmdockerenv
    fi
}

function workon() {
    # get the location of the docker environment
    WORKON_ENV=$1
    dockerenv_verify_workon_environment $WORKON_ENV || return 1
    export WORKON_ENV

    # find the activation scripts
    activate="$WORKON_HOME/$WORKON_ENV/bin/activate"
    if [ ! -f "$activate" ]; then
        echo "ERROR: Environment '$environment' does not contain an activate script." >&2
        return 1
    fi
    source "$activate"
}

function rmdockerenv() {
    # removes a dockerenv
    dockerenv_verify_workon_home || return 1
    if [ ${#@} = 0 ]; then
        echo "Please specify an environment." >&2
        return 1
    fi

    # support to remove several environments
    typeset env_name
    for env_name in $@; do
        echo "Removing $env_name..."
        typeset env_dir="$WORKON_HOME/$env_name"
        if [ "$DOCKER_ENV" == "$env_dir" ]; then
            echo "ERROR: You cannont remove the active environment ('$env_name')." >&2
            echo "Either switch to another environment, or run 'deactivate'." >&2
            return 1
        fi

        # Move out of the current directory to one known to be safe,
        # in case we are inside the environment somewhere.
        typeset prior_dir="$(pwd)"
        cd "$WORKON_HOME"
        command \rm -rf "$env_dir"

        # if the directory we used to be in still exists, move back to it.
        if [ -d "$prior_dir" ]; then
            cd "$prior_dir"
        fi
    done
}

function killdockerenv() {
    # kill a docker daemon process
    dockerenv_verify_workon_environment $WORKON_ENV
    typeset docker_id=$(docker ps -a --filter="name=$WORKON_ENV" -q)
    if [ $docker_id ]; then
        docker stop $docker_id && docker rm $docker_id
    fi
 }

function dockerenv_verify_workon_home() {
    # check that the workon home directory exists
    if [ ! -d "$WORKON_HOME/" ]; then
        echo "ERROR: Docker environments directory $WORKON_HOME does not exist." 1>&2
        return 1
    fi
    return 0
}

function dockerenv_verify_workon_environment() {
    typeset env_name="$1"
    if [ ! -d "$WORKON_HOME/$env_name" ]; then
        echo "ERROR: Environment '$env_name' does not exist." >&2
        return 1
    fi
    return 0
}

function dockerenv_verify_active_environment() {
    if [ ! -n "${DOCKER_ENV}" ] || [ ! -d "${DOCKER_ENV}" ]; then
        echo "ERROR: no dockerenv active, or active dockerenv is missing" >&2
        return 1
    fi
    return 0
}

function dockerenv_initialize() {
    export WORKON_HOME="$HOME/.dockerenv"
    dockerenv_verify_workon_home || return 1
    dockerenv_setup_tab_completion

    return 0
}

# intialize
dockerenv_initialize
